name: Deploy production

on:
  release:
    types: [published]

jobs:
  target-workspace-job:
    runs-on: ubuntu-latest
    outputs:
      target-workspace-name:
        ${{ steps.target-workspace-action.outputs.target-workspace-name }}
    steps:
      - uses: actions/checkout@v3
      - name: Run target-workspace-action script
        uses: ./.github/actions/target-workspace
        id: target-workspace-action
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  vercel-deploy-workflow-call:
    uses: ./.github/workflows/vercel-matrix-deploy.yml
    with:
      target-workspace:
        ${{ needs.target-workspace-job.outputs.target-workspace-name }}

    # needs: target-workspace-job
    # runs-on: ubuntu-latest
    # name: 'production deploy'
    # steps:
    #   - uses: actions/checkout@v3
    #   - name: Install Vercel CLI
    #     run: npm install --global vercel@latest
    #   - if: needs.target-workspace-job.outputs.target-workspace-name == 'client'
    #     name: Deploy Project Client Artifacts to Vercel
    #     run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
    #     env:
    #       VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    #       VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_TEST }}
    #   - if: needs.target-package-job.outputs.target-package-name == 'client2'
    #     name: Deploy Project Client2 Artifacts to Vercel
    #     run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
    #     env:
    #       VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    #       VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_TEST2 }}
